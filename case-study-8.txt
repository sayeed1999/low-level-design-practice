Background: A payment processing system handles different types of transactions. 
Credit card payments require additional verification, such as CVV and expiry date checks, 
while bank transfers need account number validation. Digital wallets only need an email or 
phone number for verification. The payment interface should not impose methods that are 
irrelevant to each payment type.

Question: How would you design interfaces?

Answer:
Create separate interfaces for separate payment types which all should derive from base
interface for payment and implement the validation in their own way.

```csharp
public interface IPayment {
    bool Verify();
}

public interface ICreditCardPayment : IPayment {
    bool VerifyCVV();
    bool VerifyExpiryDate();
}

public interface IDigitalWalletPayment : IPayment {
    bool VerifyAccountNumber();
}

public interface IBankTransferPayment : IPayment {
    bool VerifyPhoneNumber();
    bool VerifyEmail();
}
```
